version: "3.3"
services:
  influxdb:
    image: quay.io/influxdb/influxdb:v2.0.3
    hostname: influxdb
    container_name: influxdb
    restart: always
    ports:
      - 8086:8086
    networks:
      - influx_net
      - spark_net
    volumes:
      - influxdb-volume:/vol/influx_vol
  
  grafana:
    image: grafana/grafana
    hostname: grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    networks:
      - influx_net
    volumes:
      - grafana-volume:/vol/grafana
  
  tfserving:
    image: tensorflow/serving:latest
    hostname: tfserving
    container_name: tfserving
    restart: always
    ports:
      - 8500:8500
      - 8501:8501
    networks:
      - serving_net
    volumes:
      - ./models/sacmi_anomaly_detection:/models/lstm_anomaly
    environment:
      MODEL_NAME: lstm_anomaly
  
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka_net
    volumes:
      - ./vol/zk-data:/var/lib/zookeeper/data
      - ./vol/zk-txn-logs:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    networks:
      - kafka_net
      - influx_net
      - spark_net
    volumes:
      - ./vol/kafka-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    networks:
      - kafka_net
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  telegraf:
    image: telegraf
    container_name: telegraf
    depends_on:
      - broker
      - influxdb
    restart: always
    networks:
      - influx_net
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  spark:
    image: docker.io/bitnami/spark:3.0.1
    container_name: spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - spark_net
      - serving_net
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/jars:/opt/bitnami/spark/ivy:z

  spark-worker-1:
    image: docker.io/bitnami/spark:3.0.1
    hostname: spark-worker-1
    container_name: spark-worker-1
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - spark_net
      - serving_net
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/jars:/opt/bitnami/spark/ivy:z

  spark-worker-2:
    image: docker.io/bitnami/spark:3.0.1
    hostname: spark-worker-2
    container_name: spark-worker-2
    depends_on:
      - spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      - spark_net
      - serving_net
    volumes:
      - ./spark/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf
      - ./spark/jars:/opt/bitnami/spark/ivy:z

networks:
  kafka_net:
  influx_net:
  serving_net:
  spark_net:
volumes:
  influxdb-volume:
    external:
      true
  grafana-volume:
    external:
      true